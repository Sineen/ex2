==10775== Memcheck, a memory error detector
==10775== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==10775== Using Valgrind-3.12.0.SVN and LibVEX; rerun with -h for copyright info
==10775== Command: LineSeparator LineSeparator.in
==10775==
1
-1
1
1
1
1
1
1
1
1
1
-1
1
1
1
1
1
1
1
1
-1
1
1
1
1
1
1
1
-1
1
1
1
1
1
1
1
1
1
==10775== Invalid read of size 1
==10775==    at 0x4E72854: ____strtod_l_internal (strtod_l.c:583)
==10775==    by 0x4007BB: getVector (LineSeparator.c:42)
==10775==    by 0x400CA2: run (LineSeparator.c:194)
==10775==    by 0x400D89: main (LineSeparator.c:215)
==10775==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==10775==
==10775==
==10775== Process terminating with default action of signal 11 (SIGSEGV)
==10775==  Access not within mapped region at address 0x0
==10775==    at 0x4E72854: ____strtod_l_internal (strtod_l.c:583)
==10775==    by 0x4007BB: getVector (LineSeparator.c:42)
==10775==    by 0x400CA2: run (LineSeparator.c:194)
==10775==    by 0x400D89: main (LineSeparator.c:215)
==10775==  If you believe this happened as a result of a stack
==10775==  overflow in your program's main thread (unlikely but
==10775==  possible), you can try to increase the size of the
==10775==  main thread stack using the --main-stacksize= flag.
==10775==  The main thread stack size used in this run was 8388608.
==10775==
==10775== HEAP SUMMARY:
==10775==     in use at exit: 552 bytes in 1 blocks
==10775==   total heap usage: 3 allocs, 2 frees, 67,112 bytes allocated
==10775==
==10775== LEAK SUMMARY:
==10775==    definitely lost: 0 bytes in 0 blocks
==10775==    indirectly lost: 0 bytes in 0 blocks
==10775==      possibly lost: 0 bytes in 0 blocks
==10775==    still reachable: 552 bytes in 1 blocks
==10775==         suppressed: 0 bytes in 0 blocks
==10775== Rerun with --leak-check=full to see details of leaked memory
==10775==
==10775== For counts of detected and suppressed errors, rerun with: -v
==10775== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Segmentation fault
